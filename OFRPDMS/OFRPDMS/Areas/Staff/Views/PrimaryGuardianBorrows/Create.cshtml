    @model OFRPDMS.Models.PrimaryGuardianBorrow
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
 <script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.js")" type="text/javascript"></script>
 <link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
  
     <script type="text/javascript">
         $(function () {
             $(".pickDate").datepicker({

                 dateFormat: 'yy-mm-dd',
                 showOn: "both",
                 buttonText: "Calendar",
                 buttonImage: '@Url.Content("~/Content/themes/base/images/calendar.png")',
                 buttonImageOnly: true,
                 yearRange: "-20:+0",
                 changeMonth: true,
                 changeYear: true,
             });
         });
    </Script>
    @{
        ViewBag.Title = "Create";
    }
    <fieldset>
    <h2>Check-Out an Item</h2>

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
    
            <legend></legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.DueDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.DueDate)
        @Html.ValidationMessageFor(model => model.DueDate)
    </div>


    <div class="editor-label">
        PrimaryGuardian
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.PrimaryGuardianId, ((IEnumerable<OFRPDMS.Models.PrimaryGuardian>)ViewBag.PossiblePrimaryGuardians).Select(option => new SelectListItem
   {
       Text = (option == null ? "None" : option.FirstName + " " + option.LastName),
       Value = option.Id.ToString(),
       Selected = (Model != null) && (option.Id == Model.PrimaryGuardianId)
   }), "Choose...")
        @Html.ValidationMessageFor(model => model.PrimaryGuardianId)
    </div>
    <div class="editor-label">
        LibraryResource
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.LibraryResourceId, ((IEnumerable<OFRPDMS.Models.LibraryResource>)ViewBag.PossibleLibraryResources).Select(option => new SelectListItem
   {
       Text = (option == null ? "None" : option.Name),
       Value = option.Id.ToString(),
       Selected = (Model != null) && (option.Id == Model.LibraryResourceId)
   }), "Choose...")
        @Html.ValidationMessageFor(model => model.LibraryResourceId)
    </div>

            <p>
                <input type="submit" value="Create" />
            </p>
    
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    
    </fieldset>
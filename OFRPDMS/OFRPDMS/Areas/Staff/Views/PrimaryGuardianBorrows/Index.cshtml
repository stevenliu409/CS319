@model PagedList.IPagedList<OFRPDMS.Models.PrimaryGuardianBorrow>

@{
    ViewBag.Title = "Index";
}
<fieldset>
<h2>Checked-Out Library Items</h2>

<p>
    @Html.ActionLink("Check-Out an Item", "Create")
</p>
<table>
    <tr>
        <th></th>
        <th>
            @Html.ActionLink("Borrow Date", "Index", new { sortOrder = ViewBag.BorrowDateSortParm, currentFilter = ViewBag.CurrentFilter })  
        </th>
        <th>
               @Html.ActionLink("Returned", "Index", new { sortOrder = ViewBag.ReturnNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Due Date", "Index", new { sortOrder = ViewBag.DueDateSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Return Date", "Index", new { sortOrder = ViewBag.ReturnDateSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
              @Html.ActionLink("Primary Guardian", "Index", new { sortOrder = ViewBag.PrimaryNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Library Resource", "Index", new { sortOrder = ViewBag.ResourceNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.ActionLink("Check in", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id })
        </td>
        <td>
			@String.Format("{0:g}", item.BorrowDate)
        </td>
        <td>
			@item.Returned
        </td>
        <td>
			@String.Format("{0:g}", item.DueDate)
        </td>
        <td>
			@String.Format("{0:g}", item.ReturnDate)
        </td>
        <td>
			@(item.PrimaryGuardian == null ? "None" : item.PrimaryGuardian.FirstName)
            @(item.PrimaryGuardian == null ? "None" : item.PrimaryGuardian.LastName)
        </td>
        <td>
			@(item.LibraryResource == null ? "None" : item.LibraryResource.Name)
        </td>
    </tr>
}

</table>

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>


</fieldset>
    @model OFRPDMS.Models.PrimaryGuardianBorrow
    <!-- NO LONGER IN USE!!-->
    @{
        ViewBag.Title = "Edit";
    }
    <fieldset>
    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
    
            <legend></legend>

            @Html.HiddenFor(model => model.Id)
    <div class="editor-label">
        @Html.LabelFor(model => model.BorrowDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.BorrowDate)
        @Html.ValidationMessageFor(model => model.BorrowDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.DueDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.DueDate)
        @Html.ValidationMessageFor(model => model.DueDate)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Returned)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Returned, new SelectList(new List<bool>() { true, false }))
        @Html.ValidationMessageFor(model => model.Returned)
    </div>

    <div class="editor-label">
        PrimaryGuardian
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.PrimaryGuardianId, ((IEnumerable<OFRPDMS.Models.PrimaryGuardian>)ViewBag.PossiblePrimaryGuardians).Select(option => new SelectListItem
    {
        Text = (option == null ? "None" : option.LastName),
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.PrimaryGuardianId)
    }), "Choose...")
        @Html.ValidationMessageFor(model => model.PrimaryGuardianId)
    </div>
    <div class="editor-label">
        LibraryResource
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.LibraryResourceId, ((IEnumerable<OFRPDMS.Models.LibraryResource>)ViewBag.PossibleLibraryResources).Select(option => new SelectListItem
    {
        Text = (option == null ? "None" : option.Name),
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.LibraryResourceId)
    }), "Choose...")
        @Html.ValidationMessageFor(model => model.LibraryResourceId)
    </div>

            <p>
                <input type="submit" value="Save" />
            </p>
   
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    </fieldset>
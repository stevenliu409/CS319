@model PagedList.IPagedList<OFRPDMS.Models.EventParticipant>
           

@{
    ViewBag.Title = "Index";
}
<fieldset>
<h2>Sign Ins</h2>

<table class ="hovered">

    <tr>
        <th>
            Event Date
        </th>
        <th>
            Participant's First Name
        </th>
         <th>
            Participant's Last Name
        </th>
        <th>
            Participant Type
        </th>
        <th>
            Actions
        </th>
    
    </tr> 
    @foreach(var item in Model){
   <tr>
        <td>
            @item.Event.Date.ToString("MM/dd/yyyy")

        </td>
        
        @if (item.ParticipantType == "Primary")
        { <td>
            @Html.DisplayFor(modelItem => item.PrimaryGuardian.FirstName)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.PrimaryGuardian.LastName)
            </td>
        }
        @if (item.ParticipantType == "Secondary") { 
            <td>
             @Html.DisplayFor(modelItem => item.SecondaryGuardian.FirstName)
             </td><td>
              @Html.DisplayFor(modelItem => item.SecondaryGuardian.LastName)
              </td>
        }
        @if (item.ParticipantType == "Child")
        {
        <td>
          @Html.DisplayFor(modelItem => item.Child.FirstName)
          </td>
            <td>
            @Html.DisplayFor(modelItem => item.Child.LastName)
            </td>
        }
        
        <td>
            @Html.DisplayFor(modelItem => item.ParticipantType)
        </td>

        <td>
            
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
        }   
</table>


<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>

@Html.ActionLink("Back to List", "Index", "Events")
</fieldset>

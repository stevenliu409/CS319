@model OFRPDMS.Models.LibraryResource

@{
    ViewBag.Title = "Create";
}
<fieldset>
<h2>Create a New Library Item</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    
        <legend></legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Broken)
        </div>
        <div class="editor-field">
             @Html.DropDownListFor(model => model.Broken,new List<SelectListItem>(){new SelectListItem(){ Text = "No", Value="False"}, new SelectListItem(){ Text = "Yes", Value="True"}})
            @Html.ValidationMessageFor(model => model.Broken)
        </div>

        <div class="editor-label">
          <label>Value of Item (Cost)</label> 
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Value)
            @Html.ValidationMessageFor(model => model.Value)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Note)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Note)
            @Html.ValidationMessageFor(model => model.Note)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.ItemType)
        </div>
        <div class="editor-field">
             @Html.DropDownListFor(model => model.ItemType, new List<SelectListItem>() { new SelectListItem() { Text = "Video", Value = "Video" }, new SelectListItem() { Text = "Toy", Value = "Toy" }, new SelectListItem() { Text = "Book", Value = "Book" } })
            @Html.ValidationMessageFor(model => model.ItemType)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Sanitized)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Sanitized, new List<SelectListItem>() { new SelectListItem() { Text = "No", Value = "False" }, new SelectListItem() { Text = "Yes", Value = "True" } })
            @Html.ValidationMessageFor(model => model.Sanitized)
        </div>

        <div class="editor-field">
            @Html.Hidden("CenterId", (int)ViewBag.CenterId2)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
  
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
  </fieldset>
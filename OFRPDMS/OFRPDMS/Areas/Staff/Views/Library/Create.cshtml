@model OFRPDMS.Models.LibraryResource

@{
    ViewBag.Title = "Create";
}

<h2>Create a New Library Item</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>LibraryItem</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Broken)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Broken)
            @Html.ValidationMessageFor(model => model.Broken)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CheckedOut)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CheckedOut)
            @Html.ValidationMessageFor(model => model.CheckedOut)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Value)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Value)
            @Html.ValidationMessageFor(model => model.Value)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Image)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image)
            @Html.ValidationMessageFor(model => model.Image)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Note)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Note)
            @Html.ValidationMessageFor(model => model.Note)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.ItemType)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ItemType", ((IEnumerable<SelectListItem>)ViewBag.ItemTypes), String.Empty)
            @Html.ValidationMessageFor(model => model.ItemType)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Sanitized)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Sanitized)
            @Html.ValidationMessageFor(model => model.Sanitized)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CenterId, "Center")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CenterId", String.Empty)
            @Html.ValidationMessageFor(model => model.CenterId)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

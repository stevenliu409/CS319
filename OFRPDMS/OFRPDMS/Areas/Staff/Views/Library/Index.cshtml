@model PagedList.IPagedList<OFRPDMS.Models.LibraryResource>

@{
    ViewBag.Title = "Index";
}
<fieldset>
<h2>Library Items</h2>

<p>
    @Html.ActionLink("Create a New Library Item", "Create")
</p>

@using (Html.BeginForm())
{
    <p>
        Quick Search by Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)  
        <input type="submit" value="Search" /></p>
}
<table class = "hovered">
    <tr>
        <th></th>
        <th>
            @Html.ActionLink("Broken", "Index", new { sortOrder = ViewBag.BrokenNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Checked Out", "Index", new { sortOrder = ViewBag.CheckedOutNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink(" Value of Item (Cost) ", "Index", new { sortOrder = ViewBag.ValueNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            @Html.ActionLink(" Note ", "Index", new { sortOrder = ViewBag.NoteNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
           @Html.ActionLink(" Name ", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink(" Item Type ", "Index", new { sortOrder = ViewBag.ItemTypeNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink(" Sanitized ", "Index", new { sortOrder = ViewBag.SanitizedNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink(" Checked Out By ", "Index", new { sortOrder = ViewBag.CheckedByNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink(" Center ", "Index", new { sortOrder = ViewBag.CenterNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
      
            
           @Html.ActionLink("Edit", "Edit", new { id=item.Id }) <br />
            @Html.ActionLink("Delete", "Delete", new { id=item.Id }) <br />   
            @Html.ActionLink("Details", "Details", new { id=item.Id })
        </td>
        <td>
			@item.Broken
        </td>
        <td>
			@item.CheckedOut
        </td>
        <td>
			@String.Format("{0:F}", item.Value)
        </td>
        <td>
			@item.Note
        </td>
        <td>
			@item.Name
        </td>
        <td>
			@item.ItemType
        </td>
        <td>
			@item.Sanitized
        </td>
        <td>
            @if (item.PrimaryGuardianBorrows.SingleOrDefault(pgb => pgb.Returned == false) != null)
            {
			    @item.PrimaryGuardianBorrows.SingleOrDefault(pgb => pgb.Returned == false).PrimaryGuardian.FirstName
                <span> </span>
                @item.PrimaryGuardianBorrows.SingleOrDefault(pgb => pgb.Returned == false).PrimaryGuardian.LastName
            }

         </td>
        <td>
			@(item.Center == null ? "None" : item.Center.Name)
        </td>
    </tr>
}

</table>

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>
</fieldset>

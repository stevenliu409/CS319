
@model PagedList.IPagedList<OFRPDMS.Models.PrimaryGuardian>
           

@{
    ViewBag.Title = "Index";
}
<fieldset>

<h2>Primary Guardians</h2>

<p>
    @Html.ActionLink("Add a New Family", "Create")
</p>

@using (Html.BeginForm())
{
    <p>
        Quick Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)  
        <input type="submit" value="Search" /></p>
}
<table class= "hovered">
    <tr>
        <th>
        
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Phone", "Index", new { sortOrder = ViewBag.PhoneNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Postal Code", "Index", new { sortOrder = ViewBag.PostalcodeNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            @Html.ActionLink("Date Created", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
             @Html.ActionLink("Language", "Index", new { sortOrder = ViewBag.LanguageNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
             @Html.ActionLink("Country", "Index", new { sortOrder = ViewBag.CountryNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        <th>
            @Html.ActionLink("Allergies", "Index", new { sortOrder = ViewBag.AllergiesNameSortParm, currentFilter = ViewBag.CurrentFilter }) 

        </th>

        <th>
            @Html.ActionLink("Secondary Guardian", "Index", new { sortOrder = ViewBag.SecondaryNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
        @*<th>
            PrimaryGuardianBorrows
        </th>*@
        <th>
             @Html.ActionLink("Children", "Index", new { sortOrder = ViewBag.ChildrenNameSortParm, currentFilter = ViewBag.CurrentFilter }) 
        </th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @if (ViewBag.IsAdmin)
            {
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                <br />
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            } 
            @Html.ActionLink("Details", "Details", new { id = item.Id }) 
            
        </td>
        <td>
			@item.FirstName
        </td>
        <td>
			@item.LastName
        </td>
        <td>
			@item.Email
        </td>
        <td>
			@item.Phone
        </td>
        <td>
			@item.PostalCodePrefix
        </td>
        <td>
			@item.DateCreated.ToShortDateString()
        </td>
        <td>
			@item.Language
        </td>
        <td>
			@item.Country 
        </td>
        <td>
			@(item.Allergies == null ? "None" : item.Allergies)
        </td>
         <td>
			@(item.SecondaryGuardians.Count == 0 ? "None" : item.SecondaryGuardians.Count.ToString())
        </td>
         <td>
			@(item.Children.Count == 0 ? "None" : item.Children.Count.ToString())
        </td>
        
        @*
        <td>
	        @(item.PrimaryGuardianBorrows == null ? "None" : item.PrimaryGuardianBorrows.Count.ToString())
        </td>
        *@
        @*
        <td>
			@(item.EventParticipants == null ? "None" : item.EventParticipants.Count.ToString())
        </td>*@
       
    </tr>
}

</table>

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>
</fieldset>

